#pragma checksum "D:\Project-Sample\blazor-university-master\src\Components\MultithreadedRendering\Shared\AsynchronousInitComponent.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "a48704d1a65036cc3fbf86c79993ede01de4d4f6"
// <auto-generated/>
#pragma warning disable 1591
namespace MultithreadedRendering.Shared
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "D:\Project-Sample\blazor-university-master\src\Components\MultithreadedRendering\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Project-Sample\blazor-university-master\src\Components\MultithreadedRendering\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\Project-Sample\blazor-university-master\src\Components\MultithreadedRendering\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "D:\Project-Sample\blazor-university-master\src\Components\MultithreadedRendering\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "D:\Project-Sample\blazor-university-master\src\Components\MultithreadedRendering\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "D:\Project-Sample\blazor-university-master\src\Components\MultithreadedRendering\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "D:\Project-Sample\blazor-university-master\src\Components\MultithreadedRendering\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "D:\Project-Sample\blazor-university-master\src\Components\MultithreadedRendering\_Imports.razor"
using MultithreadedRendering;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "D:\Project-Sample\blazor-university-master\src\Components\MultithreadedRendering\_Imports.razor"
using MultithreadedRendering.Shared;

#line default
#line hidden
#nullable disable
    public partial class AsynchronousInitComponent : global::Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(global::Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
            __builder.OpenElement(0, "p");
            __builder.AddContent(1, "Async rendered by thread ");
#nullable restore
#line 1 "D:\Project-Sample\blazor-university-master\src\Components\MultithreadedRendering\Shared\AsynchronousInitComponent.razor"
__builder.AddContent(2, IdOfRenderingThread);

#line default
#line hidden
#nullable disable
            __builder.AddContent(3, ", and SynchronizationContext ");
#nullable restore
#line 1 "D:\Project-Sample\blazor-university-master\src\Components\MultithreadedRendering\Shared\AsynchronousInitComponent.razor"
__builder.AddContent(4, hashCodeOfSynchronizationContext);

#line default
#line hidden
#nullable disable
            __builder.CloseElement();
        }
        #pragma warning restore 1998
#nullable restore
#line 4 "D:\Project-Sample\blazor-university-master\src\Components\MultithreadedRendering\Shared\AsynchronousInitComponent.razor"
 
	int IdOfRenderingThread;
	int? hashCodeOfSynchronizationContext;

	protected override async Task OnInitializedAsync()
	{
		// Runs synchronously as there is no code in base.OnInitialized(),
		// so the same thread is used
		await base.OnInitializedAsync();
		IdOfRenderingThread = System.Threading.Thread.CurrentThread.ManagedThreadId;
		hashCodeOfSynchronizationContext = System.Threading.SynchronizationContext.Current?.GetHashCode();

		// Awaiting will schedule a job for later, and we will be assigned
		// whichever worker thread is next available
		await Task.Delay(1000);
		IdOfRenderingThread = System.Threading.Thread.CurrentThread.ManagedThreadId;
		hashCodeOfSynchronizationContext = System.Threading.SynchronizationContext.Current?.GetHashCode();
	}

#line default
#line hidden
#nullable disable
    }
}
#pragma warning restore 1591
